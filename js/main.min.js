/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n\n\nvar header = document.querySelector('header');\nfunction handleScroll() {\n  if (window.scrollY > 0) {\n    header.classList.add('header-is-sticky');\n  } else if (window.scrollY < 1) {\n    header.classList.remove('header-is-sticky');\n  }\n}\nwindow.addEventListener('scroll', handleScroll);\nvar headerToggler = document.querySelector('.header__toggler');\nvar body = document.querySelector('body');\nvar headerNavItem = document.querySelectorAll('.header__navItem');\nheaderToggler.addEventListener('click', function () {\n  if (header.classList.contains('m-menu-open')) {\n    header.classList.remove('m-menu-open');\n    body.classList.remove('fixed');\n    setTimeout(function () {\n      header.classList.remove('overflow');\n    }, 300);\n  } else {\n    header.classList.add('overflow');\n    header.classList.add('m-menu-open');\n    body.classList.add('fixed');\n  }\n});\nvar _loop = function _loop(i) {\n  headerNavItem[i].addEventListener('click', function (event) {\n    console.log(headerNavItem[i]);\n    header.classList.remove('m-menu-open');\n    body.classList.remove('fixed');\n  });\n};\nfor (var i = 0; i < headerNavItem.length; i++) {\n  _loop(i);\n}\nvar swiper = new Swiper(\".offerSwiper\", {\n  slidesPerView: 1,\n  spaceBetween: 0,\n  loop: true,\n  autoHeight: true,\n  breakpoints: {\n    768: {\n      slidesPerView: 2,\n      spaceBetween: 10,\n      autoHeight: false\n    },\n    1200: {\n      slidesPerView: 3,\n      spaceBetween: 10,\n      autoHeight: false\n    },\n    1400: {\n      slidesPerView: 3,\n      spaceBetween: 30,\n      autoHeight: false\n    }\n  },\n  pagination: {\n    el: \".swiper-pagination\",\n    dynamicBullets: true\n  },\n  navigation: {\n    nextEl: \".swiper-button-next\",\n    prevEl: \".swiper-button-prev\"\n  }\n});\nvar showCount = 2;\nvar elementsToShowInitially = 2;\nvar totalElements = document.querySelectorAll('.to-more__wrapper > div').length;\nvar toMoreButton = document.querySelector('.btn__to-more');\nvar currentVisibleCount = elementsToShowInitially;\nvar mediaMaxWidth = 767; // Максимальная ширина вьюпорта для активации функционала\n\n// Проверка ширины вьюпорта при загрузке страницы\ncheckViewportWidth();\n\n// Добавляем обработчик изменения размера окна\n/*\nwindow.addEventListener('resize', function () {\n  checkViewportWidth();\n});\n\n */\n\n// Функция проверки ширины вьюпорта и активации/деактивации функционала\nfunction checkViewportWidth() {\n  if (window.innerWidth <= mediaMaxWidth) {\n    // Скрываем все элементы, кроме showCount\n    hideElements();\n    toMoreButton.style.display = 'block';\n\n    // Добавляем обработчик клика на кнопку\n    toMoreButton.addEventListener('click', function () {\n      if (currentVisibleCount < totalElements) {\n        // Показываем elementsToShowInitially элементов\n        currentVisibleCount += elementsToShowInitially;\n        showElements(currentVisibleCount);\n\n        // Если все элементы показаны, меняем текст кнопки на \"Скрыть\"\n        if (currentVisibleCount >= totalElements) {\n          this.textContent = 'Скрыть';\n          this.classList.add('btn-empty');\n        }\n      } else {\n        // Скрываем все элементы, кроме showCount\n        hideElements();\n        currentVisibleCount = elementsToShowInitially;\n        this.textContent = 'Показать еще';\n        this.classList.remove('btn-empty');\n      }\n    });\n  } else {\n    // Если ширина вьюпорта больше mediaMaxWidth, убираем обработчик и показываем все элементы\n    toMoreButton.removeEventListener('click', null);\n    showAllElements();\n    toMoreButton.style.display = 'none';\n  }\n}\n\n// Функция скрытия элементов, кроме первых showCount\nfunction hideElements() {\n  var elements = document.querySelectorAll('.to-more__wrapper > div');\n  for (var _i = 0; _i < elements.length; _i++) {\n    if (_i >= showCount) {\n      elements[_i].style.display = 'none';\n    } else {\n      elements[_i].style.display = '';\n    }\n  }\n}\n\n// Функция показа указанного количества элементов\nfunction showElements(count) {\n  var elements = document.querySelectorAll('.to-more__wrapper > div');\n  for (var _i2 = 0; _i2 < elements.length; _i2++) {\n    if (_i2 < count) {\n      elements[_i2].style.display = '';\n    } else {\n      elements[_i2].style.display = 'none';\n    }\n  }\n}\n\n// Функция показа всех элементов\nfunction showAllElements() {\n  var elements = document.querySelectorAll('.to-more__wrapper > div');\n  for (var _i3 = 0; _i3 < elements.length; _i3++) {\n    elements[_i3].style.display = '';\n  }\n}\n\n// Получаем все элементы .city-on-map\nvar cities = document.querySelectorAll(\".city-point\");\n\n// Функция для имитации эффекта наведения мыши\nfunction simulateHoverEffect() {\n  // Удаляем классы hover у всех элементов\n  cities.forEach(function (city) {\n    city.classList.remove(\"hover\");\n  });\n\n  // Получаем случайный индекс\n  var randomIndex = Math.floor(Math.random() * cities.length);\n\n  // Добавляем класс hover для случайного элемента\n  cities[randomIndex].classList.add(\"hover\");\n}\n\n// Запускаем функцию через каждые 5 секунд\nsetInterval(simulateHoverEffect, 3000);\n\n// Имитируем первоначальный вызов для старта\nsimulateHoverEffect();\n\n//# sourceURL=webpack:///./main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./main.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;